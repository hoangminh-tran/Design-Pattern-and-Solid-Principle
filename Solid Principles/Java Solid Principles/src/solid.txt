Solid principles

+ Single Responsibility
    Each class should have only one sole purpose
    and not be filled with excessive functionality

+ Open Closed
    Classes should be open for extension, closed for modification

    In other words, you should not have to rewrite
    an existing class for implementing new features

+ Liskov Substitution
    This means that every subclasss or devired class should be
    substitutable for their base or parent class

+ Interfacce Segregation
    Interfaces should not force classes to implement what
    they cannot do.
    Large interfaces should be divided into small ones

+ Dependency Injection
    Components should depend on abstract class or equal instead
    of concreate class

